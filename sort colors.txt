LeetCode

75. Sort Colors

Description:
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.
We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.
You must solve this problem without using the library's sort function.
Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Input: nums = [2,0,1]
Output: [0,1,2]

Solution C++:
class Solution {
public:
    void sortColors(vector<int>& nums) {
        //dutch national flag algorithm
        /*3 pointers
        low = 0;
        high = nums.size()-1;
        mid = 0;
        assumption : 
        1) put all 0s in left (0...low-1)
        2) put all 2s in right (high+1...n)
        3) all the 1s in mid (low+1....mid-1)
        base condition : while(mid<=high)
        3 operations:
        1) if(nums[mid] == 0) swap low and mid & low++, mid++
        2) if(nums[mid] == 1) mid++
        3) if(nums[mid] == 2) swap high and mid & high--*/
        int low = 0;
        int mid = 0;
        int high = nums.size() - 1;
        while(mid <= high){
            switch(nums[mid]){
                case 0:
                    swap(nums[low++], nums[mid++]);
                    break;
                case 1:
                    mid++;
                    break;
                case 2:
                    swap(nums[mid], nums[high--]);
                    break;
            }
        }
    }
};