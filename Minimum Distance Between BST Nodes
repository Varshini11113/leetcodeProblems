783. Minimum Distance Between BST Nodes

Description:
Given the root of a Binary Search Tree (BST), return the minimum difference between the values of any two different nodes in the tree.

Input: root = [4,2,6,1,3]
Output: 1

Input: root = [1,0,48,null,null,12,49]
Output: 1

Solution: C++
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* prev = NULL;
    void diff(TreeNode* root,int &ans){
        if(root->left){
            diff(root->left, ans);
        }
        if(prev != NULL){
            ans = min(ans, abs(prev->val - root->val));
        }
        prev = root;
        if(root->right){
            diff(root->right, ans);
        }
    }
    int minDiffInBST(TreeNode* root) {
        int ans = INT_MAX;
        diff(root, ans);
        return ans;
    }
};